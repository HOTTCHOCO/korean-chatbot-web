# OpenAI GPT-4o API 연동

**Task ID:** T-006
**Status:** BACKLOG
**Importance:** MUST
**Complexity:** 5/10
**Urgency:** 8/10
**Dependencies:** T-005

## Description

### 설명
백엔드에서 OpenAI GPT-4o API를 호출해, 사용자의 질문에 대한 답변과 예문을 받아오는 로직을 구현합니다. API Key 보호 및 에러 대응도 포함합니다.

### 구현 상세
1.  **API 키 보안 관리**: OpenAI API 키를 Render의 환경변수(`OPENAI_API_KEY`)로 안전하게 설정하고, 코드에 직접 노출되지 않도록 합니다.
2.  **OpenAI 클라이언트 설치 및 초기화**: 백엔드 프로젝트에 `openai` 라이브러리를 설치하고, 환경변수에서 API 키를 읽어와 클라이언트를 초기화합니다.
3.  **서비스 로직 구현 (`chat.service.ts`)**: 
    -   `openai.chat.completions.create` 함수를 호출하여 GPT-4o 모델에 요청을 보냅니다.
    -   요청 시, 사용자의 질문과 함께 '다정하고 친절한 언니'라는 챗봇 페르소나를 정의하는 시스템 프롬프트를 포함시킵니다.
    -   TRD 요구사항에 따라 `stream: true` 옵션을 사용하여 응답을 스트리밍 방식으로 처리합니다. 이를 통해 생성되는 텍스트를 클라이언트에 실시간으로 전송하여 체감 속도를 향상시킵니다.
4.  **스트리밍 응답 처리**: OpenAI API로부터 받은 스트림을 Express의 응답(response) 객체로 직접 파이핑하여 클라이언트에 전달합니다.
5.  **예외 처리**: OpenAI API 호출 부분을 `try...catch` 블록으로 감싸, API 장애나 타임아웃 등의 예외 상황을 처리하고 클라이언트에 적절한 에러 응답을 보냅니다.

### 테스트 전략
- **백엔드 통합 테스트**: Postman과 같은 도구를 사용하여 `/api/chat` 엔드포인트에 실제 질문을 보내고, OpenAI로부터 스트리밍 응답이 정상적으로 수신되는지 확인합니다.
- **엔드투엔드 테스트**: 프론트엔드 채팅 UI와 백엔드 API를 연동하여, 사용자가 질문을 입력했을 때 AI의 답변이 채팅창에 실시간으로 타이핑되듯이 표시되는 전체 흐름을 검증합니다.

---

**Created:** 2025-08-07T03:01:17.682Z
**Updated:** 2025-08-07T03:01:17.682Z
